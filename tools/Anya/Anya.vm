function Anya.new 0
push constant 10
call Memory.alloc 1
pop pointer 0
push constant 64
pop this 6
push constant 54
pop this 7
push constant 50
pop static 0
push constant 255
pop static 1
push constant 439
pop static 3
push constant 0
pop static 2
push constant 26
pop static 4
push constant 4
pop static 5
push constant 16
pop this 4
push constant 0
pop this 5
push constant 1
pop static 6
push constant 0
pop this 9
push constant 0
pop this 8
push constant 100
pop this 0
push constant 256
push this 6
sub
pop this 1
push this 0
push this 6
add
push constant 1
sub
pop this 2
push this 1
push this 6
add
push constant 1
sub
pop this 3
push pointer 0
push constant 1
call Anya.show 2
pop temp 0
push pointer 0
return
function Anya.word 0
push argument 0
pop pointer 0
push argument 2
push constant 32
call Math.multiply 2
push argument 1
push constant 16
call Math.divide 2
add
return
function Anya.getX 0
push argument 0
pop pointer 0
push this 0
return
function Anya.getY 0
push argument 0
pop pointer 0
push this 1
return
function Anya.getX1 0
push argument 0
pop pointer 0
push this 2
return
function Anya.getY1 0
push argument 0
pop pointer 0
push this 3
return
function Anya.show 1
push argument 0
pop pointer 0
push pointer 0
push this 0
push this 1
call Anya.word 3
pop local 0
push this 8
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push argument 1
call Graphics.standNia 2
pop temp 0
label IF_FALSE0
push this 8
push constant 1
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 9
push constant 2
call Utils.modulo 2
push constant 1
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 0
push argument 1
call Graphics.walkNia1 2
pop temp 0
goto IF_END2
label IF_FALSE2
push local 0
push argument 1
call Graphics.walkNia2 2
pop temp 0
label IF_END2
label IF_FALSE1
push this 8
push constant 2
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 9
push constant 2
call Utils.modulo 2
push constant 1
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push local 0
push argument 1
call Graphics.crawlNia1 2
pop temp 0
goto IF_END4
label IF_FALSE4
push local 0
push argument 1
call Graphics.crawlNia2 2
pop temp 0
label IF_END4
label IF_FALSE3
push this 8
push constant 3
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push local 0
push argument 1
call Graphics.jumpNia 2
pop temp 0
label IF_FALSE5
push constant 0
return
function Anya.setPos 0
push argument 0
pop pointer 0
push argument 1
pop this 0
push argument 2
pop this 1
push argument 3
pop this 2
push argument 4
pop this 3
push constant 0
return
function Anya.setState 0
push argument 0
pop pointer 0
push argument 1
pop this 8
push constant 0
return
function Anya.move 2
push argument 0
pop pointer 0
push this 9
push constant 1
add
pop this 9
push this 3
push constant 1
add
push this 5
push static 6
call Math.divide 2
sub
push constant 255
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 1
push constant 0
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 0
push this 4
sub
pop this 0
push this 2
push this 4
sub
pop this 2
goto IF_END1
label IF_FALSE1
push this 0
push this 4
add
pop this 0
push this 2
push this 4
add
pop this 2
label IF_END1
goto IF_END0
label IF_FALSE0
push this 0
push this 4
add
pop this 0
push this 2
push this 4
add
pop this 2
label IF_END0
push this 0
push static 2
lt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
not
return
label IF_FALSE2
push this 2
push static 3
gt
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 0
push this 2
push static 3
sub
sub
pop this 0
push static 3
pop this 2
label IF_FALSE3
push constant 0
pop local 1
push this 3
push constant 1
add
push this 5
push static 6
call Math.divide 2
sub
push constant 255
gt
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push argument 1
push constant 133
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push constant 255
pop this 3
push constant 256
push this 7
sub
pop this 1
push constant 0
not
pop local 1
goto IF_END5
label IF_FALSE5
push this 3
push this 6
sub
push constant 1
add
pop this 1
push argument 1
push constant 32
eq
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push static 4
pop this 5
label IF_FALSE6
push this 3
push this 5
push static 6
call Math.divide 2
sub
pop this 3
push this 1
push this 5
push static 6
call Math.divide 2
sub
pop this 1
push this 5
push static 5
sub
pop this 5
label IF_END5
goto IF_END4
label IF_FALSE4
push this 3
push this 5
push static 6
call Math.divide 2
sub
pop this 3
push this 1
push this 5
push static 6
call Math.divide 2
sub
pop this 1
push this 5
push static 5
sub
pop this 5
label IF_END4
push this 1
push static 0
lt
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push this 3
push this 1
push static 0
sub
sub
pop this 3
push static 0
pop this 1
label IF_FALSE7
push this 3
push static 1
gt
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push this 1
push this 3
push static 1
sub
sub
pop this 1
push static 1
pop this 3
label IF_FALSE8
push argument 1
push constant 32
eq
if-goto IF_TRUE9
goto IF_FALSE9
label IF_TRUE9
push constant 3
pop this 8
label IF_FALSE9
push local 1
if-goto IF_TRUE10
goto IF_FALSE10
label IF_TRUE10
push constant 2
pop this 8
label IF_FALSE10
push argument 1
push constant 0
eq
if-goto IF_TRUE11
goto IF_FALSE11
label IF_TRUE11
push constant 0
pop this 8
label IF_FALSE11
push argument 1
push constant 132
eq
if-goto IF_TRUE12
goto IF_FALSE12
label IF_TRUE12
push constant 1
pop this 8
label IF_FALSE12
push constant 0
return
